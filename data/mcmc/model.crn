directive simulation {final=36; points=250; plots=[(([x] * ([yfp] + [f500])) + yb0_exrep); (([x] * ([cfp] + [f430])) + cb0_exrep)]; multicore=True; }
directive simulator sundials
directive parameters [
  C6 = 0;
  C12 = 0;
  c0 = 0.001;
  r = 1;
  K = 2;
  rc = 1;
  tlag = 0;
  tau = 0;
  aYFP_PR = 1000;
  aCFP_PR = 1000;
  Ara = 0;
  nA = 1;
  KAra = 1;
  eA = 0.1;
  daiiA = 0.1;
  dA6 = 1;
  dA12 = 1;
  e76 = 0.0310181, {interval=Log; distribution=TruncatedNormal(0.0310181,0.000512734824251289,0.0001,1); variation=Random};
  e81 = 0.00144038, {interval=Log; distribution=TruncatedNormal(0.00144038,0.000615871739893949,0.0001,1); variation=Random};
  aYFP = 735091, {interval=Log; distribution=TruncatedNormal(735091,1090729.11394168,1000,10000000); variation=Random};
  aCFP = 43862.3, {interval=Log; distribution=TruncatedNormal(43862.3,516.012596745467,1000,10000000); variation=Random};
  KGR_76 = 10.3061, {interval=Log; distribution=TruncatedNormal(10.3061,0.365907092032937,0.0001,1000); variation=Random};
  KGS_76 = 0.476164, {interval=Log; distribution=TruncatedNormal(0.476164,0.0266825973248483,0.0001,1000); variation=Random};
  KGR_81 = 0.00340134, {interval=Log; distribution=TruncatedNormal(0.00340134,0.00146176605515383,0.0001,1000); variation=Random};
  KGS_81 = 1.14097, {interval=Log; distribution=TruncatedNormal(1.14097,0.489658043944956,0.0001,1000); variation=Random};
  KR6 = 0.000161816, {interval=Log; distribution=TruncatedNormal(0.000161816,1.33382907450693E-05,1E-08,1); variation=Random};
  KS6 = 5.44913E-07, {interval=Log; distribution=TruncatedNormal(5.44913E-07,4.95265585317615E-07,1E-08,1); variation=Random};
  KR12 = 1.99238E-07, {interval=Log; distribution=TruncatedNormal(1.99238E-07,1.9003946958461E-08,1E-08,1); variation=Random};
  KS12 = 0.025676, {interval=Log; distribution=TruncatedNormal(0.025676,0.00106033013726858,1E-08,1); variation=Random};
  nR = 0.813469, {interval=Real; distribution=TruncatedNormal(0.813469,0.00951143522293034,0.5,2); variation=Random};
  nS = 1.61994, {interval=Real; distribution=TruncatedNormal(1.61994,0.040193531817943,0.5,2); variation=Random};
  aR = 1;
  aS = 1;
  aR33 = 9.13793, {interval=Log; distribution=TruncatedNormal(9.13793,0.25319458919969,1,100); variation=Random};
  aS175 = 2.59566, {interval=Log; distribution=TruncatedNormal(2.59566,0.0305122434442307,1,100); variation=Random};
  dR = 9.99195, {interval=Log; distribution=TruncatedNormal(9.99195,0.00797687908896706,0.01,10); variation=Random};
  dS = 0.1;
  dYFP = 0.137733, {interval=Log; distribution=TruncatedNormal(0.137733,0.00116547415243754,0.001,1); variation=Random};
  dCFP = 0.449436, {interval=Log; distribution=TruncatedNormal(0.449436,0.00383930983381128,0.001,1); variation=Random};
  autoCFP = 268.997, {interval=Log; distribution=TruncatedNormal(268.997,0.791061944477169,0.001,1000); variation=Random};
  autoYFP = 8.06916, {interval=Log; distribution=TruncatedNormal(8.06916,0.225038218976244,0.001,1000); variation=Random};
  cb0 = 1000;
  yb0 = 1000;
  kC6 = 1;
  Klux = 1;
  dluxI = 0.1;
  kC12 = 1;
  Klas = 1;
  dlasI = 0.1;
  aL = 0.1, {interval=Log; distribution=Uniform(0.01,100); variation=Random};
  aT = 0.1, {interval=Log; distribution=Uniform(0.01,100); variation=Random};
  nL = 4, {interval=Real; distribution=Uniform(0.5,5); variation=Random};
  nT = 4, {interval=Real; distribution=Uniform(0.5,5); variation=Random};
  dL = 0.1, {interval=Log; distribution=Uniform(0.001,10); variation=Random};
  dT = 0.1, {interval=Log; distribution=Uniform(0.001,10); variation=Random};
  iA = 1, {interval=Log; distribution=Uniform(0.01,1000); variation=Random};
  iI = 1, {interval=Log; distribution=Uniform(0.01,1000); variation=Random};
  ATC = 0;
  IPTG = 0;
  yb0_exrep = 1000, {interval=Real; distribution=Uniform(0,5000); variation=Random};
  cb0_exrep = 1000, {interval=Real; distribution=Uniform(0,10000); variation=Random};
]
directive inference {name=target; burnin=50000; samples=50000; thin=100; seed=5; noise_model=proportional}
directive rates [
  P76 = (((e76 + (KGR_76 * [boundLuxR])) + (KGS_76 * [boundLasR])) / ((1 + (KGR_76 * [boundLuxR])) + (KGS_76 * [boundLasR])));
  P81 = (((e81 + (KGR_81 * [boundLuxR])) + (KGS_81 * [boundLasR])) / ((1 + (KGR_81 * [boundLuxR])) + (KGS_81 * [boundLasR])));
  PBad = (((Ara ^ nA) + (eA * (KAra ^ nA))) / ((Ara ^ nA) + (KAra ^ nA)));
  PLac = (1 / (1 + ([lacI] ^ nL)));
  PTet = (1 / (1 + ([tetR] ^ nT)));
  boundLasR = (([lasR] ^ 2) * ((((KS6 * [c6]) ^ nS) + ((KS12 * [c12]) ^ nS)) / (((1 + (KS6 * [c6])) + (KS12 * [c12])) ^ nS)));
  boundLuxR = (([luxR] ^ 2) * ((((KR6 * [c6]) ^ nR) + ((KR12 * [c12]) ^ nR)) / (((1 + (KR6 * [c6])) + (KR12 * [c12])) ^ nR)));
  capacity = rc;
  growth = (([grow] * r) * (1 - ([x] / K)))
]


system exrep_device0 = { 
directive simulation {final=36; points=250; plots=[(([x] * ([yfp] + [f500])) + yb0_exrep); (([x] * ([cfp] + [f430])) + cb0_exrep)]; }
directive simulator sundials
directive sweeps [
  sweep_dataset0_device0 = [(r,K,tlag,C6,C12,ATC,IPTG) = [(1.23894505368182,2.53766895902538,8.24166451370415E-07,25000,25000,0,0); (1.1551771393826,2.90626791254837,1.62033611504381E-06,25000,2500,0,0); (1.13518153245031,2.94396526330427,1.58293810959382E-06,25000,250,0,0); (1.15017478713148,2.96476599910667,1.10646209090994E-06,25000,25,0,0); (1.0817925195261,2.89743377909979,1.21273844641838E-07,25000,2.5,0,0); (1.04304849906649,2.90240347747071,9.32492692249631E-06,25000,0,0,0); (1.21510324859151,2.84700254060013,6.82192906247463E-07,2500,2500,0,0); (1.19925446564436,2.78625698592335,2.52096682164156E-07,2500,250,0,0); (1.11455799563677,2.90226504491073,5.55497815632389E-06,2500,25,0,0); (1.14161878875328,2.9353770190595,1.32591748436787E-06,2500,2.5,0,0); (1.14038619126357,2.75676937783223,7.08570731649373E-07,2500,0,0,0); (1.25170463191312,2.57734667399742,2.01301110530181E-06,250,25000,0,0); (1.15682449691539,2.65453778086451,1.07417314038192E-06,250,250,0,0); (1.09350213677588,2.81935634730102,1.47290925684881E-06,250,25,0,0); (1.09023473478023,2.75015030090053,5.67625282162169E-06,250,2.5,0,0); (1.13421032519389,2.7315779782046,1.50011938491706E-06,250,0,0,0); (1.22717543489916,2.71759092881194,2.92397172946316E-08,25,25000,0,0); (1.17801001650193,2.72330142978369,3.73837649278459E-06,25,2500,0,0); (1.15036016519781,2.73182030950349,1.86071370228857E-06,25,250,0,0); (1.13345091291321,2.79141702662875,4.18404786376814E-06,25,25,0,0); (1.16006517769177,2.76350849568851,3.10482258541446E-06,25,2.5,0,0); (1.16070962957246,2.61671578639583,9.91527294006791E-07,25,0,0,0); (1.20098528914545,2.55582117977553,3.86167169830118E-06,2.5,25000,0,0); (1.13097294299284,2.72515743254507,2.09999396618155E-06,2.5,2500,0,0); (1.08673713792465,2.75678113723135,1.36098307308076E-05,2.5,250,0,0); (1.10262526508051,2.76736392345325,2.02122783388875E-06,2.5,25,0,0); (1.10120493553783,2.76212504858977,4.92623299438366E-06,2.5,2.5,0,0); (1.11537792648394,2.63199499726725,7.95540776167249E-06,2.5,0,0,0); (1.14757956041908,2.71145703570321,6.32470184049976E-07,0,25000,0,0); (1.09123494313056,2.75842399304768,7.71564801029213E-06,0,2500,0,0); (1.08712087286199,2.77417465098977,1.99155498014181E-06,0,250,0,0); (1.13514231983081,2.74617541719101,1.73674836390068E-06,0,25,0,0); (1.17250021549074,2.51602105434495,4.0859894692538E-06,0,2.5,0,0); (1.16188019002926,2.6869599504772,3.30670445535336E-06,0,0,0,0)]; c0 = [0.002]];
  sweep_dataset1_device0 = [(r,K,tlag,C6,C12,ATC,IPTG) = [(0.973885992484453,2.62710624190841,4.52934778928705E-06,10000,10000,200,1); (0.95353266411812,2.84923047673019,1.48175707652051E-06,10000,10000,200,0.333333); (0.984124690289953,2.68303616475084,7.01760399752084E-06,10000,10000,200,0.111111); (0.982658251702679,2.63988927431687,0.128523819803121,10000,10000,200,0.037037); (0.925465900742494,2.70199035136658,9.60067981865707E-06,10000,10000,200,0.012346); (0.900331832248647,2.74296144591375,2.99778402700029E-05,10000,10000,100,1); (0.872738228990413,2.59902507555547,1.92819094753992E-05,10000,10000,50,1); (0.866498165536459,2.5993853454632,0.000538936333826212,10000,10000,25,1); (0.890394444291477,2.70061343246753,1.60400521192968E-05,10000,10000,12.5,1); (0.841398526051671,2.66441027964993,1.13797519253683E-05,10000,10000,6.25,1); (1.01343127948964,2.81605527383438,1.18937716790768E-07,2000,10000,200,1); (0.995549580265199,2.87253431287523,1.75235196850052E-06,2000,10000,200,0.333333); (1.02661397212886,2.80815476697723,4.51522097994548E-06,2000,10000,200,0.111111); (0.920140141058641,2.65780670657883,2.23647582898238E-05,2000,10000,200,0.037037); (0.964438641687123,2.7107052765493,7.92103954265023E-06,2000,10000,200,0.012346); (0.839788353534268,2.38868384874414,1.46273864386964E-05,10000,2000,100,1); (0.906462376642942,2.69738780037858,6.4936746543585E-06,10000,2000,50,1); (0.880317380103206,2.60022790089615,3.50560463141688E-05,10000,2000,25,1); (0.908224108612436,2.66250327490432,1.25683770391835E-05,10000,2000,12.5,1); (0.803682334364758,2.51135114414967,8.60232034518642E-06,10000,2000,6.25,1); (1.03212073891086,2.75099431783813,4.29549378386001E-07,400,10000,200,1); (1.04806273225224,2.84575019440147,1.28634592751565E-08,400,10000,200,0.333333); (0.942855096154374,2.58269998102393,8.37872622808783E-05,400,10000,200,0.111111); (0.942804561423362,2.62136974868842,0.00677608040357697,400,10000,200,0.037037); (0.950008004230152,2.69295476547727,1.28626723292885E-05,400,10000,200,0.012346); (0.832958752569517,2.43740698606093,3.9425139643267E-05,10000,400,100,1); (0.93386239238914,2.76567539241995,0.00314007682824437,10000,400,50,1); (0.914652211129344,2.61955429360463,0.191073372733735,10000,400,25,1); (0.930919619987029,2.62736350813423,0.323269551827466,10000,400,12.5,1); (0.823512376070629,1.89931635616257,2.5010799936311E-05,10000,400,6.25,1); (1.00123346407689,2.65526814102768,4.35309547696344E-07,80,10000,200,1); (1.01102461209496,2.64273578367854,5.24326901759418E-07,80,10000,200,0.333333); (0.993421673019227,2.63630193910229,0.0234978039773115,80,10000,200,0.111111); (0.930759151974436,2.42975279313731,1.10508795550166E-05,80,10000,200,0.037037); (0.986500614349242,2.53228713649837,1.15414378821363E-05,80,10000,200,0.012346); (0.919075912455004,2.55626961264154,0.308417026811916,10000,80,100,1); (0.935193087581979,2.74585888936465,2.94372034721255E-05,10000,80,50,1); (0.876890109630014,2.46116492949205,5.45569008170866E-06,10000,80,25,1); (0.899522600849301,2.56899463942913,1.65275511564299E-06,10000,80,12.5,1); (0.840798049713859,2.35114365749953,8.13707069809723E-06,10000,80,6.25,1); (0.987940138541681,2.73206483648061,2.36934452411551E-07,16,10000,200,1); (0.919172399460225,2.61595734412916,0.392412394531882,16,10000,200,0.333333); (0.957698873435149,2.5922759447128,0.294997863738122,16,10000,200,0.111111); (0.86893065630363,1.96884626541666,4.39570985296723E-06,16,10000,200,0.037037); (0.952210787042811,2.57772503361775,1.71288678906114E-05,16,10000,200,0.012346); (0.948014292632264,2.81369072349753,6.62084751199413E-05,10000,16,100,1); (0.941383112975537,2.67425663404013,3.63937230634122E-05,10000,16,50,1); (0.958230269328248,2.49270728709942,0.0435157298538811,10000,16,25,1); (0.921928804156156,2.47321427032614,7.46782435350518E-06,10000,16,12.5,1); (0.867485328200356,2.32752996845255,2.79202639609055E-06,10000,16,6.25,1)]; c0 = [0.002]];
]
directive data [proc_R33S175ExrepTet33AAVLac300ND_edited; proc_R33S175ExrepTet33AAVLac300ND_IPTGATC_titration]
directive rates [
  P76 = (((e76 + (KGR_76 * [boundLuxR])) + (KGS_76 * [boundLasR])) / ((1 + (KGR_76 * [boundLuxR])) + (KGS_76 * [boundLasR])));
  P81 = (((e81 + (KGR_81 * [boundLuxR])) + (KGS_81 * [boundLasR])) / ((1 + (KGR_81 * [boundLuxR])) + (KGS_81 * [boundLasR])));
  PBad = (((Ara ^ nA) + (eA * (KAra ^ nA))) / ((Ara ^ nA) + (KAra ^ nA)));
  PLac = (1 / (1 + ([lacI] ^ nL)));
  PTet = (1 / (1 + ([tetR] ^ nT)));
  boundLasR = (([lasR] ^ 2) * ((((KS6 * [c6]) ^ nS) + ((KS12 * [c12]) ^ nS)) / (((1 + (KS6 * [c6])) + (KS12 * [c12])) ^ nS)));
  boundLuxR = (([luxR] ^ 2) * ((((KR6 * [c6]) ^ nR) + ((KR12 * [c12]) ^ nR)) / (((1 + (KR6 * [c6])) + (KR12 * [c12])) ^ nR)));
  capacity = rc;
  growth = (([grow] * r) * (1 - ([x] / K)))
]

| c0 x
| 1 grow @ tlag
| C6 c6 @ tau
| C12 c12 @ tau
| ->[([growth] * [x])] x
| ->[([capacity] * autoYFP)] f500
| f500 ->[([growth] * [f500])]
| ->[([capacity] * autoCFP)] f430
| f430 ->[([growth] * [f430])]
| ->[(([capacity] * aR33) * [PTet])] luxR
| luxR ->{dR}
| luxR ->[([growth] * [luxR])]
| ->[(([capacity] * aS175) * [PLac])] lasR
| lasR ->{dR}
| lasR ->[([growth] * [lasR])]
| ->[(([capacity] * aT) * [P81])] tetR
| tetR ->{dT}
| tetR ->[([growth] * [tetR])]
| tetR ->{(iA * ATC)}
| ->[(([capacity] * aL) * [P76])] lacI
| lacI ->[([growth] * [lacI])]
| lacI ->{dL}
| lacI ->{(iI * IPTG)}
| ->[(([capacity] * aYFP) * [P81])] yfp
| yfp ->{dYFP}
| yfp ->[([growth] * [yfp])]
| ->[(([capacity] * aCFP) * [P76])] cfp
| cfp ->{dCFP}
| cfp ->[([growth] * [cfp])]
}